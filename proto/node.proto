syntax = "proto3";
package cexBroker; // TODO: I've renamed...

// TODO: This whole file can be a simple message...
// TODO: A single generic CCXT action/message to executing any CCXT function... This way the broker is dynamic ...
// TODO: Maybe a second action to trigger a websocket/streaming response...
message CcxtActionRequest {
  Action action = 1;                        // The CCXT method to call (e.g., "fetchBalance", "createOrder")
  map<string, string> payload = 2;          // Parameters to pass to the CCXT method
  string cex = 3;     // CEX identifier (e.g., "binance", "bybit")
  string symbol = 4;  // Optional: trading pair symbol if needed
}

message CcxtActionResponse {
  string result = 2;       // JSON string of the result data
}
service CexService {
  rpc ExecuteCcxtAction(CcxtActionRequest) returns (CcxtActionResponse);
}


// Mode enum for price direction
enum Action {
  NoAction=0;
  Deposit = 1;
  Transfer = 2;
  CreateOrder= 3;
  GetOrderDetails=4;
  CancelOrder=5;
  FetchBalance=6;
}